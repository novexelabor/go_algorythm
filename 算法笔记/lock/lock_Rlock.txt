RLock() 叫读锁。实际是一种特殊的自旋锁，
它把对共享资源的访问者划分成读者和写者，
读者只对共享资源进行读访问，写者则需要对共享资源进行写操作。
这种锁相对于自旋锁而言，能提高并发性，因为在多处理器系统中，
它允许同时有多个读者来访问共享资源，最大可能的读者数为实际的逻辑CPU数。

Lock() 叫写锁，它是个绝对锁，就是说，如果一旦某人拿到了这个锁，别人就不能再获取此锁了。

--------------------------------

Lock方法将rw锁定为写入状态，禁止其他线程读取或者写入。

Unlock方法解除rw的写入锁状态，如果m未加写入锁会导致运行时错误。

RLock方法将rw锁定为读取状态，禁止其他线程写入，但不禁止读取。

RUnlock方法解除rw的读取锁状态，如果m未加读取锁会导致运行时错误。

-------------------------------------

当写锁阻塞时，新的读锁是无法申请的。
有效防止了，写者饥饿，也禁止了读锁嵌套，读锁嵌套会导致死锁